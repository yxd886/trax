# Copyright 2020 The Trax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import trax.models
import trax.optimizers
import trax.data.inputs
import trax.data.tf_inputs
import trax.supervised.trainer_lib

vocab_size = 13  #  For addition, base = vocab_size - 3.

# Parameters for data_streams:
# ==============================================================================
data_streams.data_dir = None
data_streams.dataset_name = 'addition'

# Parameters for sequence_copy_inputs:
# ==============================================================================
# batcher.id_to_mask = 0
sequence_copy_inputs.vocab_size = %vocab_size
sequence_copy_inputs.batch_size = 128
sequence_copy_inputs.train_length = 64
sequence_copy_inputs.eval_min_length = 128
sequence_copy_inputs.eval_max_length = 160
sequence_copy_inputs.reverse = False
sequence_copy_inputs.pad_to_multiple = 32

# Parameters for addition_inputs:
# ==============================================================================
addition_inputs.vocab_size = %vocab_size
addition_inputs.batch_size = 128
addition_inputs.train_length = 64
addition_inputs.eval_min_length = 128
addition_inputs.eval_max_length = 160
addition_inputs.pad_to_multiple = 32

# Parameters for multifactor:
# ==============================================================================
multifactor.constant = 0.05
multifactor.factors = 'constant * linear_warmup * rsqrt_decay'
multifactor.warmup_steps = 4000

# Parameters for LSHSelfAttention:
# ==============================================================================
LSHSelfAttention.attention_dropout = 0.0
LSHSelfAttention.chunk_len = 16
LSHSelfAttention.n_chunks_after = 0
LSHSelfAttention.n_chunks_before = 1
LSHSelfAttention.n_hashes = 2
LSHSelfAttention.n_parallel_heads = 1
LSHSelfAttention.max_length_for_buckets = 1024

# Parameters for ReformerLM:
# ==============================================================================
ReformerLM.d_model = 256
ReformerLM.d_ff = 512
ReformerLM.dropout = 0.05
ReformerLM.max_len = 256
ReformerLM.n_heads = 4
ReformerLM.n_layers = 3
ReformerLM.ff_use_sru = 1
ReformerLM.axial_pos_shape = 'fixed-base'
ReformerLM.attention_type = @LSHSelfAttention
ReformerLM.vocab_size = %vocab_size

# Parameters for train:
# ==============================================================================
# train.inputs = @trax.data.inputs.sequence_copy_inputs
train.inputs = @trax.data.inputs.addition_inputs
train.eval_frequency = 1000
train.eval_steps = 10
train.optimizer = @trax.optimizers.Adam
train.steps = 30000
train.model = @trax.models.ReformerLM

